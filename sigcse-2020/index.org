#+REVEAL_ROOT: ../reveal-root/
#+REVEAL_THEME: serif
#+OPTIONS: toc:nil num:nil date:nil email:t 
#+OPTIONS: reveal_title_slide:"<h1>%t</h1><br><h3>mz631@hunter.cuny.edu</h3><p><h3>@zamansky</h3>"
#+TITLE: [[file:github.png]]
#+AUTHOR: Mike Zamansky
#+EMAIL: Email: mz631@hunter.cuny.edu<br>Twitter: @zamansky
#+OPTIONS: reveal_title_slide:nil

* 
#+BEGIN_EXPORT html
<img height="200" src="github.png">
#+END_EXPORT

#+BEGIN_EXPORT html
<style>

#left {
  left:-8.33%;
  text-align: left;
  float: left;
  width:75%;
  z-index:-10;
}

#right {
  left:31.25%;
  top: 75px;
  float: right;
  text-align: right;
  z-index:-10;
  width:25%;
}
</style>

<div id="left">

<p>Taking Your Students from GitHub</p>
<p>Newbies to Pull Request Masters</p>

<p>Mike Zamansky @zamansky</p>

</div>
<div id="right">  
<img height="200" src="hunter2.jpg">
</div>

#+END_EXPORT


#+BEGIN_NOTES
schools that teach kids over 13 can apply to GitHub Ed
#+END_NOTES

* Why are we here?
#+ATTR_REVEAL: :frag (t)
- Sharing materials with students is hard
- Project collection / grading / feedback is hard
- Students should learn real world tools
- learning Git on top of everything adds to cognitive load
- but it's worth it!!!!!!!

#+begin_notes
- We will learn the process I use to teach
- can be used in a semester or over years
- pragmatic approach
#+end_notes

* History of submitting work
#+REVEAL_HTML: <div class="column" style="float:left; width: 50%">
- blackboard / rexos
- printouts / floppys
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width: 50%">
[[file:oldschool.jpg]]
#+REVEAL_HTML: </div>

#+begin_notes
Maybe tell history HW submission story
#+end_notes

* What it can be
#+REVEAL_HTML: <div class="column" style="float:left; width: 50%">
- Version control
- Automated distribution and collection
- Communication and feedback
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width: 50%">
[[file:happyschool.jpg]]
#+REVEAL_HTML: </div>

* GitHub to the rescue
- The good
  - Version control goodness
  - Industry standard tool
  - Replaces locked in CMS functionality
  - Gives us additional student insights
  - great platform for ancillary things (open source, code reviews etc).
- The bad
  - learning curve
  - scary 
* 
[[file:novacaine.jpg]]

#+BEGIN_NOTES
- It's intimidating but if you do one thing at a time it's ok
- lead them into situations to learn the next thing
#+END_NOTES


* Ease them in
[[file:235.png]]
#+BEGIN_NOTES
Class web site
#+END_NOTES
** The steps
- Get them on to GitHub
- Set up SSH Keys
- Important commands:

#+BEGIN_SRC bash
  git clone https://github.com/hunter-classes/235
  cd 235
  git pull   <-- each time
  git checkout <-- (maybe)
#+END_SRC
#+BEGIN_NOTES
Demo if possible

Issues:
- what if I edit the code?
- What if I delete it

#+END_NOTES
* Their first assignment
#+BEGIN_EXPORT html
<img height="500" width="600px" src="firstassignment.jpg" alt="assignment">
#+END_EXPORT

#+begin_notes
- show classroom or demo at end if time
#+end_notes

* Concepts and commands
#+BEGIN_SRC bash
  git add filename
  git commit filename -m "message"
  git mv filename
  git rm filename
  git push
  git checkout
#+END_SRC


#+BEGIN_NOTES
Issues: they won't read the error messages

#+END_NOTES
* RTFM
#+REVEAL_HTML: <div class="column" style="float:left; width: 50%">
[[file:xkcd.png]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width: 50%">
[[file:rtfm.png]]
#+REVEAL_HTML: </div>

* When codes collide

file:collide.jpg

#+BEGIN_NOTES
Issues: eventually you'll get merge issues
#+END_NOTES

* Merging 
#+BEGIN_SRC 
Auto-merging a
CONFLICT (content): Merge conflict in a
Automatic merge failed; fix conflicts and then commit the result.
#+END_SRC

#+BEGIN_SRC 
<<<<<<< HEAD
echo "Hello World!"
hello hello
 worddddddddd
=======
echo "Hello World"
>>>>>>> newbranch

#+END_SRC

#+begin_notes
- Show how to create a merge situation 
- setup-merge
- git merge newbranch
- YOU DON'T NEED TO KNOW THIS NOW
#+end_notes

* Grading and providing feedback
#+ATTR_REVEAL: :frag (t)
- Why not autograders?
- What's better?
#+begin_notes
- must look at work (like essay autograders)
- good for short stuff (coding bat) 
- good for student confirmation and y/n feedback
#+end_notes
** 
- Test frameworks
  | Language | Framework       |
  |----------+-----------------|
  | Python   | Unittest        |
  | C++      | doctest / catch |
** 


#+REVEAL_HTML: <div class="column" style="float:left; width: 40%">
[[file:tests.png]]
#+REVEAL_HTML: </div>
 
#+REVEAL_HTML: <div class="column" style="float:right; width: 40%">
#+ATTR_REVEAL: :frag (t)
- Give them tests or add some later.
- Student created or teacher created.
#+REVEAL_HTML: </div>
** Challenges and Opportunities
#+ATTR_REVEAL: :frag (t)
- Challenges
  #+ATTR_REVEAL: :frag (t)
  - Students code to the tests
  - Students fail to run the tests
- Opportunities
  #+ATTR_REVEAL: :frag (t)
  - Students become more introspective about their code
  - Students learn real world software engineering sensibilities
** The road to CI
- GitHub Classroom Autograding beta
#+REVEAL_HTML: <div class="column" style="float:right; width: 50%">
[[file:tests-workflows.png]]
#+REVEAL_HTML: </div>
#+REVEAL_HTML: <div class="column" style="float:left; width: 50%">
[[file:tests-setup.png]]
#+REVEAL_HTML: </div>
#+begin_notes
- in beta
- io test / run command / regex / match / included
- really CI

#+end_notes
* Student and instructor feedback
#+REVEAL_HTML: <div class="column" style="float:left; width: 33%">
[[file:testworks-overview.png]]
#+REVEAL_HTML: </div>
#+REVEAL_HTML: <div class="column" style="float:left; width: 33%">
[[file:testworks-user.png]]
#+REVEAL_HTML: </div>
#+REVEAL_HTML: <div class="column" style="float:left; width: 33%">
[[file:testworks-details.png]]
#+REVEAL_HTML: </div>
#+begin_notes
These are autograding test reports
#+end_notes
* It's just GitHub!!!
#+BEGIN_EXPORT html
<img height="500" width="600px" src="workflows.png" alt="assignment">
#+END_EXPORT


* Other benefits
** Issues 
#+BEGIN_EXPORT html
<img height="400" src="issues.png" alt="assignment">
#+END_EXPORT

** Stats and Graphs
#+BEGIN_EXPORT html
<img height="400"  src="contrib.png" alt="assignment">
#+END_EXPORT

** Commit History
#+BEGIN_EXPORT html
<img height="400" src="commits.png" alt="assignment">
#+END_EXPORT


* Code with friends (pull requests)
- Do a code review

#+BEGIN_NOTES
- Pair programming is real time code review
- Students learn to work on other code bases
- Talk about the assignments I use

#+END_NOTES

* Links
- https://education.github.com/
- https://classroom.github.com/classrooms
- https://classroom.github.com/help
